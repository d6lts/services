<?php
// $Id$

/**
 * Implementation of hook_help().
 */

function views_service_help($section) {
  switch ($section) {
    case 'admin/help#services_views':
      return t('<p>Provides view methods to services applications. Requires services.module.</p>');
    case 'admin/modules#description':
      return t('Provides view methods to services applications. Requires services.module.');
  }
}

/**
 * Implementation of hook_service().
 */

function views_service_service() {
  return array(
    array(
      '#method'   => 'views.getView',
      '#callback' => 'views_service_get_view',
      '#args'     => array('string', 'array', 'array'),
      '#args'     => array(
        array(
          '#name'         => 'view_name',
          '#type'         => 'string',
          '#description'  => t('View name.')),
        array(
          '#name'         => 'fields',
          '#type'         => 'array',
          '#optional'     => TRUE, 
          '#description'  => t('A list of fields to return.')),
        array(
          '#name'         => 'args',
          '#type'         => 'array',
          '#optional'     => TRUE,
          '#description'  => t('An array of arguments to pass to the view.'))),
      '#return'   => 'array',
      '#help'     => t('Retrieves a view defined in views.module.')),
  );
}

/**
 * get a view from the database
 */
function views_service_get_view($view_name, $fields = array(), $args = array()) { 
  $view = views_get_view($view_name);
  if ($view == null)
  {
    return services_error('View does not exist.');
  }
  
  $result = views_build_view('result', $view, $args);
  while ($node = db_fetch_object($result['result'])) {
    $nodes[] = services_node_load(node_load(array('nid' => $node->nid)), $fields);
  }
  
  return $nodes;
}