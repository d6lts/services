<?php
// $Id$

/**
 * Implementation of hook_help().
 */

function user_service_help($path, $arg) {
  switch ($path) {
    case 'admin/help#services_user':
      return t('<p>Provides user methods to services applications.  Requires services.module.</p>');
    case 'admin/modules#description':
      return t('Provides user methods to services applications.  Requires services.module.');
  }
}

/**
 * Implementation of hook_service().
 */
 
function user_service_service() {
  return array(
    
    // user.login
    array(
      '#method'   => 'user.login',
      '#callback' => 'user_service_login',
      '#args'     => array(
        array(
          '#name' => 'username',
          '#type' => 'string',
          '#description' => t('A valid username.'),
        ), 
        array(
          '#name' => 'password',
          '#type' => 'string',
          '#description' => t('A valid password.'),
        ),
      ),
      '#return'   => 'struct',
      '#help'     => t('Logs in a user.')),
    
    // user.logout
    array(
      '#method'   => 'user.logout',
      '#callback' => 'user_service_logout',
      '#args'     => array(),
      '#return'   => 'struct',
      '#help'     => t('Logs out a user.')),
  );
}

/**
 * login a user
 */
function user_service_login($username, $password) {
  $user = user_authenticate(array('name' => $username, 'pass' => $password));
  if ($user->uid) {
    session_start();
    $return = new stdClass();
    $return->sessid = session_id();
    $return->user = $user;
    return $return;
  }
  session_destroy();
  return services_error(t('Wrong username or password.'));
}

/**
 * Logout user
 */
function user_service_logout() {
  global $user;

  watchdog('user', t('Session closed for %name.', array('%name' => theme('placeholder', $user->name))));

  // Destroy the current session:
  session_destroy();
  module_invoke_all('user', 'logout', NULL, $user);

  // Load the anonymous user
  $user = drupal_anonymous_user();
  
  return true;
}
