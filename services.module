<?php
// $Id$
/**
 * @author Services Dev Team
 * @file
 *  Provides a generic but powerful API for web services.
 */

/**
 * Implementation of hook_help().
 */
function services_help($path, $arg) {
  switch ($path) {
    case 'admin/help#services':
      return t('Visit the <a href="http://drupal.org/node/109782">Services Handbook</a> for help and information.');

    case 'admin/build/services':
    case 'admin/build/services/services':
      return '<p>'. t('Services are collections of methods available to remote applications. They are defined in modules, and may be accessed in a number of ways through server modules. Visit the <a href="http://drupal.org/node/109782">Services Handbook</a> for help and information.') .'</p>'.
        '<p>'. t('All enabled services and methods are shown. Click on any method to view information or test.') .'</p>';      return $output;
  }
}

/**
 * Implementation of hook_perm().
 */
function services_perm() {
  return array('access services', 'administer services');
}

/**
 * Implementation of hook_menu().
 */
function services_menu() {
  $items['admin/build/services'] = array(
    'access arguments'  => array('administer services'),
    'description'       => 'Allows external applications to communicate with Drupal.',
    'file'              => 'services_admin_browse.inc',
    'page callback'     => 'services_admin_browse_index',
    'title'             => 'Services',
  );
  $items['admin/build/services/services'] = array(
    'description'       => 'Browse and test available remote services.',
    'title'             => 'List',
    'type'              => MENU_DEFAULT_LOCAL_TASK,
    'weight'            => -10,
  );
  $items['admin/build/services/services/%services_service'] = array(
    'access arguments'  => array('administer services'),
    'description'       => 'Calls a Services method.',
    'file'              => 'services_admin_browse.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_services_admin_service_test', 4),
    'title'             => 'Services',
    'type'              => MENU_LOCAL_TASK,
  );
  $items['admin/build/services/js'] = array(
    'access arguments'  => array('access content'),
    'file'              => 'services_admin_browse.inc',
    'page callback'     => '_services_admin_service_test_js',
    'type'              => MENU_CALLBACK,
  );
  $items['admin/build/services/oauth_test'] = array(
    'access arguments'  => array(array('administer services', 'access services')),
    'description'       => 'Use your own consumer keys to test the OAuth server.',
    'file'              => 'services.oauth.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_services_oauth_test'),
    'title'             => 'OAuth test',
    'type'              => MENU_LOCAL_TASK,
  );
  $items['admin/settings/services'] = array(
    'access arguments'  => array('administer services'),
    'description'       => 'Configure service settings.',
    'file'              => 'services_admin_browse.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('services_admin_settings'),
    'title'             => 'Services',
  );
  $items['crossdomain.xml'] = array(
    'access arguments'  => array('access services'),
    'file'              => 'services.inc',
    'page callback'     => '_services_crossdomain_xml',
    'type'              => MENU_CALLBACK,
  );
  $items['services/%'] = array(
    'access arguments'  => array('access services'),
    'file'              => 'services.inc',
    'page callback'     => '_services_server',
    'page arguments'    => array(1),
    'title'             => 'Services',
    'type'              => MENU_CALLBACK,
  );
  $items['services/request'] = array(
    'access arguments'  => array('access services'),
    'file'              => 'services.oauth.inc',
    'page callback'     => '_services_token_request',
    'type'              => MENU_CALLBACK,
  );
  $items['services/auth'] = array(
    'access arguments'  => array('access services'),
    'file'              => 'services.oauth.inc',
    'page callback'     => '_services_token_auth',
    'type'              => MENU_CALLBACK,
  );
  $items['services/access'] = array(
    'access arguments'  => array('access services'),
    'file'              => 'services.oauth.inc',
    'page callback'     => '_services_token_access',
    'type'              => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu wildcard loader for browsing Service methods.
 */
function services_service_load($method) {
  module_load_include('inc', 'services');
  $method = _services_service_get($method);
  return isset($method) ? $method : FALSE;
}

/**
 * Implementation of hook_user
 */
function services_user($op, &$edit, $account, $category) {
  global $user;
  if ($op == 'view' and $account->uid == $user->uid and user_access('access services')) {
    module_load_include('oauth.inc', 'services');
    $consumer = _services_consumer_get($account->uid);
    $account->content['consumer_key'] = array(
      '#type'       => 'user_profile_category',
      '#attributes' => array('class' => 'user-member'),
      '#title'      => t('Web services'),
      '#weight'     => 5,
    );
    $account->content['consumer_key']['key'] = array(
      '#title'      => t('Consumer key'),
      '#type'       => 'user_profile_item',
      '#value'      => $consumer->key,
    );
    $account->content['consumer_key']['secret'] = array(
      '#title'      => t('Consumer secret'),
      '#type'       => 'user_profile_item',
      '#value'      => $consumer->secret,
    );
  }
}
